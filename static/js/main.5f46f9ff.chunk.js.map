{"version":3,"sources":["components/Header.js","generateElement.js","components/1.js","components/2.js","components/3.js","components/Transaction.js","components/approve.js","components/4.js","components/5.js","components/Retry.js","components/Welcome.js","components/Navigation.js","App.js","getWeb3.js","stores/web3Store.js","stores/tokenStore.js","stores/gasPriceStore.js","stores/txStore.js","stores/UiStore.js","index.js"],"names":["Header","inject","observer","state","multisenderAddress","props","UiStore","tokenStore","proxyMultiSenderAddress","setState","explorerUrl","this","web3Store","className","href","htmlFor","target","rel","React","Component","generateElement","msg","errorNode","document","createElement","innerHTML","required","control","error","isChanged","isUsed","value","toString","trim","length","FirstStep","onNext","wizard","step","id","parseCompleted","onCsvChange","csv","parseAddresses","console","log","jsonAddresses","swal","title","text","icon","invalid_addresses","JSON","stringify","slice","push","message","txStore","setStartedUrl","onTokenAddress","bind","onDecimalsChange","format","placeholder","tokenAddress","label","onParse","addNextHandler","tokenInfoArray","userTokens","filter","t","tokenInfo","reduce","v","addresses","Object","keys","e","address","Web3Utils","isAddress","setTokenAddress","setDecimals","Promise","res","rej","csvtojson","noheader","fromString","on","el","defineProperty","writable","configurable","enumerable","setJsonAddresses","content","errors","Creatable","isLoading","loading","name","onChange","loadingPlaceholder","options","disabled","validations","onBlur","createTheme","primary","secondary","fontFamily","background","default","context","divider","button","focus","hover","sortFocus","RecipientsDataTable","columns","selector","sortable","grow","tokenSymbol","left","theme","customStyles","pagination","style","marginBottom","cells","paginationPerPage","data","paginationTotalRows","ThirdStep","BN","totalBalance","gt","defAccTokenBalance","multisendGasEthValue","getMultisendPlusApproveGasEthValue","ethBalanceWei","toWei","ethBalance","displayMultisendGasEthValue","parseFloat","fromWei","toFixed","allowance","gte","onGasPriceChange","selected","gasPriceStore","setSelectedGasPrice","updateCurrentFee","onGasShareChange","setSelectedGasShare","gasPricesArray","gasPrice","transferGas","approveGas","multisendGas","gasSharesArray","dublicates","getTransferGas","totalNumberTx","addPerTx","arrayLimit","getMultisendGas","multisendGasOrig","Math","floor","parseInt","getApproveTxGas","getApproveGas","approveGasOrig","setTimeout","clearTimeout","_updateCurrentFeeImpl","standardInHex","approvePlusMultisendGas","plus","setCurrentFee","savedGas","minus","newCurrentFeeRounded","times","div","selectedGasShare","dp","displayValue","transferEthValue","displayTransferEthValue","savedGasEthValue","displaySavedGasEthValue","selectedGasPrice","padding","renderTokenBalance","renderTransferGasInfo","renderTokenAllowance","renderMultisendGasInfo","renderSavingsGasInfo","addressesData","Transaction","classname","tx","hash","status","ApproveStep","intervalId","txs","doApprove","setInterval","clearInterval","txHashes","map","index","mined","FourthStep","location","reload","totalNumberOftx","calcTotalNumberOftx","doSendExecuted","doSend","Number","txCount","label2","onTxInput","txHash","getTxReceipt","txdata","type","Link","to","Navigation","render","next","previous","steps","onClick","App","nextHandlers","forEach","handler","ex","startedUrl","Redirect","pathname","Route","history","percent","indexOf","color","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","_web3Config","_web3Promise","getWeb3","resolve","reject","window","addEventListener","hasOwnProperty","web3","Web3","givenProvider","eth","net","getId","then","netId","netIdName","trustApiName","ethereum","request","method","accounts","firstAccount","defaultAccount","estimateGas","__proto__","call","web3Instance","injectedWeb3","catch","err","Web3Store","rootStore","userTokensInitialized","url","web3Config","getUserTokens","setExplorerUrl","fetch","json","result","tokens","toLowerCase","tokensUniqueObj","i","token","tokensUnique","unshift","observable","action","require","TokenStore","getWeb3Promise","web3Obj","netIdEnvVarName","toUpperCase","contractAddress","process","decimals","Contract","ERC20ABI","methods","balanceOf","multiplier","subscribe","getBalance","toFormat","symbol","currentFee","getCurrentFee","getEthBalance","getArrayLimit","getDecimals","getAllowance","getTokenSymbol","balances_to_send","addresses_to_send","filteredAddresses","account","replace","toChecksumAddress","balance","values","indexAddr","addr","obj","pow","ceil","computed","GasPriceStore","gasPricePromise","getGasPrices","response","fast","gasPrices","toHex","TxStore","txHashToIndex","interval","approval","keepRunning","_approve","toJS","_multisend","totalBalanceWithDecimals","approve","send","from","once","receipt","getTxStatus","transactionHash","encodeABI","encodedData","transfer","totalGas","_getTransferGas","token_address","start","end","totalInWei","total","val","balances_to_send_sum","totalInEth","ethValue","MultiSenderAbi","multisender","multiTransfer_OST","gas","multiTransferToken_a4A","substring","getTransaction","txInfo","getTransactionReceipt","gasUsed","Root","HashRouter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5f46f9ff.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { inject, observer } from \"mobx-react\";\nimport GithubCorner from 'react-github-corner';\n\n@inject(\"UiStore\")\n@observer\nexport class Header extends React.Component {\n\n  state = {\n    multisenderAddress: null,\n  };\n\n  componentDidMount() {\n    (async () => {\n      const multisenderAddress = await this.props.UiStore.tokenStore.proxyMultiSenderAddress()\n      this.setState({multisenderAddress})\n    })()\n  }\n\n  render() {\n    const explorerUrl = this.props.UiStore.web3Store.explorerUrl || 'https://bscscan.com';\n\n    return (\n    <header className=\"header\">\n      <div className=\"multisend-container\">\n        <a href=\"#\" className=\"header-logo\"></a>\n        <form className=\"form form_header\">\n          {/* <Link className=\"button\" to='/retry'>Retry Failed Transaction</Link> */}\n          <label htmlFor=\"network\"\n              className=\"multisend-label\">MultiSender Address: <a target=\"_blank\" href={`${explorerUrl}/address/${this.state.multisenderAddress}`}>\n                 {this.state.multisenderAddress}</a>\n          </label>\n        </form>\n      </div>\n      <div className=\"multisend-container\">\n        Supports BSC Mainnet and Testnet\n      </div>\n      <GithubCorner href=\"https://github.com/blockinator\" target=\"_blank\" rel=\"nofollow\" />\n    </header>\n    )\n  }\n}\n","export default function generateElement(msg){\n  let errorNode = document.createElement(\"div\");\n  errorNode.innerHTML = `${msg}`;\n  return errorNode;\n}","import React from 'react';\nimport Web3Utils from 'web3-utils';\nimport Form from 'react-validation/build/form';\nimport Textarea from 'react-validation/build/textarea';\nimport Button from 'react-validation/build/button';\nimport { form, control, button } from 'react-validation';\nimport { inject, observer } from \"mobx-react\";\nimport swal from 'sweetalert';\nimport generateElement from '../generateElement'\nimport Example from './example.json'\n// import { PulseLoader} from 'react-spinners';\nimport {RadioGroup, Radio} from 'react-radio-group';\nimport csvtojson from 'csvtojson'\nimport Select from 'react-select'\nimport '../assets/stylesheets/react-select.min.css';\n\n\nconst ownInput = ({ error, isChanged, isUsed, ...props }) => (\n  <div>\n    {isChanged && isUsed && error}\n    <input {...props} />\n  </div>\n);\nconst Input = control(ownInput);\n\nconst required = (value) => {\n  if (!value.toString().trim().length) {\n    return <span className=\"error\">required</span>;\n  }\n};\n\nconst isAddress = (value) => {\n  if (!Web3Utils.isAddress(value)) {\n    return <span className=\"error\">Token address is invalid</span>;\n  }\n};\n// const InvalidJSON = <div>Your JSON is invalid, please visit <a href=\"https://jsonlint.com/\" target=\"_blank\">Online Json Validator</a></div>\n\n// const isJson = (value) => {\n//   try {\n//     JSON.parse(value)\n//   } catch(e) {\n//     return InvalidJSON\n//   }\n// };\n\n@inject(\"UiStore\")\n@observer\nexport class FirstStep extends React.Component {\n  constructor(props){\n    super(props);\n    this.tokenStore = props.UiStore.tokenStore;\n    this.txStore = props.UiStore.txStore;\n    this.web3Store = props.UiStore.web3Store;\n    this.web3Store.setStartedUrl('#/');\n    this.onTokenAddress = this.onTokenAddress.bind(this);\n    this.onDecimalsChange = this.onDecimalsChange.bind(this);\n    // this.onJsonChange = this.onJsonChange.bind(this);\n    this.state ={\n      format: 'csv',\n      placeholder: `\n0xCBA5018De6b2b6F89d84A1F5A68953f07554765e,12\n0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9,1123.45645\n0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae,1.049\n0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774,14546\n`,\n      tokenAddress: {label: '', value: null},\n      csv: \"\"\n    }\n    // this.onSelectFormat = this.onSelectFormat.bind(this)\n    this.onParse = this.onParse.bind(this)\n    this.parseCompleted = false;\n    // this.list = [];\n\n    this.props.addNextHandler(this.onNext)\n  }\n\n  componentDidMount() {\n    // this.tokenStore.reset()\n    // this.txStore.reset()\n\n    if ('' !== this.tokenStore.tokenAddress) {\n      const tokenInfoArray = this.web3Store.userTokens.filter(t => {\n        return t.value === this.tokenStore.tokenAddress\n      })\n      if (tokenInfoArray.length > 0) {\n        const tokenInfo = tokenInfoArray[0]\n        this.setState({tokenAddress: {...tokenInfo}})\n      }\n    }\n\n    if (this.tokenStore.jsonAddresses.length > 0) {\n      const csv = this.tokenStore.jsonAddresses.reduce((csv, v) => {\n        const addresses = Object.keys(v)\n        const val = addresses[0] + \",\" + v[addresses[0]]\n        return csv + val + \"\\n\"\n      }, \"\")\n      this.setState({csv: csv})\n    }\n  }\n  async onTokenAddress(e){\n    if(!e){\n      this.setState({tokenAddress: {label: '', value: ''}})\n      return\n    }\n    const address = e.value;\n    if (Web3Utils.isAddress(address)) {\n        await this.tokenStore.setTokenAddress(address);\n        this.setState({tokenAddress: {label: e.label, value: e.value}})\n    }\n  }\n//   onSelectFormat(newFormat){\n//     this.parseCompleted = false;\n//     if(newFormat === 'csv'){\n//       this.setState({format: newFormat, placeholder: `\n// 0xCBA5018De6b2b6F89d84A1F5A68953f07554765e,12\n// 0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9,1123.45645\n// 0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae,1.049\n// 0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774,14546\n//   `})\n//     swal(\"Information\", `Please provide CSV file in comma separated address,balance format one line per address.\n//     \\nExample:\\n\n// 0xCBA5018De6b2b6F89d84A1F5A68953f07554765e,12\n// 0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9,113.45\n// 0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae,1.049\n// 0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774,14546\n//     `, 'info')\n//     } else {\n//       this.setState({format: newFormat, placeholder: JSON.stringify(Example)})\n//       swal({\n//         content: generateElement(`<div style=\"color:black;\">\n//         Please provide JSON-array file in the following format.\n//         \\nExample:\\n\n//         <div style=\"font-size: 12px;color:purple;\">\n//         [<br/>\n//           {\"0xCBA5018De6b2b6F89d84A1F5A68953f07554765e\":\"12\"},\n//           {\"0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9\":\"1123.45645\"},\n//           {\"0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae\":\"1.049\"},\n//           {\"0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774\":\"14546\"}\n//           <br/>]\n//         </div>\n//         </div>\n//         `),\n//         icon: 'info'\n//       })\n//\n//     }\n//   }\n  onDecimalsChange(e) {\n    this.tokenStore.setDecimals(e.target.value)\n  }\n\n  // onJsonChange(value) {\n  //   try {\n  //     let addresses = JSON.parse(value);\n  //     this.tokenStore.setJsonAddresses(addresses)\n  //     this.parseCompleted = true;\n  //   } catch(e) {\n  //     const error = e.message.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t');\n  //     console.error(error)\n  //     swal({\n  //       content: generateElement(`${error} Please visit <a target=\"_blank\" href=\"https://jsonlint.com\">JsonLint.com</a>`),\n  //       icon: \"error\",\n  //     })\n  //   }\n  // }\n\n  async onCsvChange(value){\n    return new Promise((res, rej) => {\n      let addresses = [];\n      csvtojson({noheader:true})\n      .fromString(value)\n        .on('csv',(csv)=>{\n          let el = {};\n          if(csv.length === 2){\n            Object.defineProperty(el, csv[0], {\n              value: csv[1],\n              writable: true,\n              configurable: true,\n              enumerable: true,\n            });\n            addresses.push(el)\n          }\n        })\n        .on('end', () => {\n          try {\n            console.log('csv is done')\n            this.parseCompleted = true;\n            this.tokenStore.setJsonAddresses(addresses)\n            res(addresses);\n          } catch(e) {\n            console.error(e)\n            rej(e);\n            swal({\n              content: \"Your CSV is invalid\",\n              icon: \"error\",\n            })\n          }\n        })\n    })\n  }\n\n  onParse(e){\n    // this.list = e.target.value;\n    this.setState({csv: e.target.value})\n    // if(this.state.format === 'json') {\n    //   this.onJsonChange(e.target.value)\n    // }\n    if(this.state.format === 'csv'){\n      this.onCsvChange(e.target.value)\n    }\n    return\n  }\n\n  onNext = async (wizard) => {\n    // console.log(wizard.step)\n    if (\"home\" !== wizard.step.id) {\n      return\n    }\n\n    try {\n      if(!this.parseCompleted){\n        await this.onCsvChange(this.state.csv)\n      }\n      await this.tokenStore.parseAddresses()\n      console.log('length of addresses', this.tokenStore.jsonAddresses.length)\n      if(this.tokenStore.jsonAddresses.length === 0){\n        swal({\n          title: \"The address list is empty.\",\n          text: \"Please make sure you set correct CSV or JSON format in input selector\",\n          icon: \"error\",\n        })\n        return\n      }\n      if(this.tokenStore.invalid_addresses.length > 0){\n        swal({\n          title: \"There are invalid BNB addresses. If you click Next, multisender will remove them from the list.\",\n          text: JSON.stringify(this.tokenStore.invalid_addresses.slice(), null, '\\n'),\n          icon: \"error\",\n        })\n        return\n      }\n      wizard.push(\"inspect\")\n    } catch(e) {\n      console.error(e)\n      swal({\n        title: \"Parsing Error\",\n        text: e.message,\n        icon: \"error\",\n      })\n    }\n  }\n\n  render () {\n    if(this.tokenStore.errors.length > 0){\n      swal(\"Error!\", this.tokenStore.errors.toString(), 'error')\n    }\n    if(this.web3Store.errors.length > 0){\n      swal(\"Error!\", this.web3Store.errors.toString(), 'error')\n    }\n    return (\n        <div>\n          <div className=\"description\">\n            <ol>\n              <li>Select Token Address</li>\n              <li>Enter comma-separated list of addresses and values to send</li>\n              <li>Press the <strong>Next</strong> button</li>\n            </ol>\n          </div>\n          <Form className=\"form\">\n            <div className=\"form-inline\">\n              <div className=\"form-inline-i form-inline-i_token-address\">\n                <label htmlFor=\"token-address\" className=\"multisend-label\">Token Address</label>\n                <Select.Creatable\n                  isLoading={this.web3Store.loading}\n                  name=\"token-address\"\n                  id=\"token-address\"\n                  value={this.state.tokenAddress}\n                  onChange={this.onTokenAddress}\n                  loadingPlaceholder=\"Loading your token addresses...\"\n                  placeholder=\"Please select a token or input the address\"\n                  options={this.web3Store.userTokens.slice()}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-inline\">\n              <div className=\"form-inline-i form-inline-i_token-address-values\">\n                <label htmlFor=\"token-address-values\" className=\"multisend-label\">List of addresses and values</label>\n                <Textarea\n                  disabled={this.web3Store.loading}\n                  name=\"token-address-values\"\n                  id=\"token-address-values\"\n                  data-gram\n                  validations={[required]}\n                  placeholder={`Example: ${this.state.placeholder}`}\n                  value={this.state.csv}\n                  onBlur={this.onParse} id=\"addresses-with-balances\" className=\"multisend-textarea\"></Textarea>\n              </div>\n            </div>\n          </Form>\n        </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class SecondStep extends React.Component {\n  render () {\n    return (\n      <div className=\"multisend-container multisend-container_bg\">\n        <div className=\"content\">\n          <h1 className=\"title\"><strong>Welcome to Token</strong> MultiSender</h1>\n          <p className=\"description\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n            tempor incididunt ut labore <a href=\"#\">et dolore magna</a> aliqua.\n          </p>\n          <form className=\"form\">\n            <div className=\"form-inline\">\n              <div className=\"form-inline-i form-inline-i_token-address\">\n                <label htmlFor=\"token-address\" className=\"multisend-label\">Token Address</label>\n                <input type=\"text\" className=\"input\" id=\"token-address\"/>\n              </div>\n              <div className=\"form-inline-i form-inline-i_token-decimals\">\n                <label htmlFor=\"token-decimals\" className=\"multisend-label\">Token Decimals</label>\n                <input type=\"text\" className=\"input\" id=\"token-decimals\"/>\n              </div>\n            </div>\n            <div className=\"form-inline\">\n              <div className=\"form-inline-i form-inline-i_balance\">\n                <label htmlFor=\"balance\" className=\"multisend-label\">Balance</label>\n                <input type=\"text\" className=\"input\" id=\"balance\"/>\n              </div>\n              <div className=\"form-inline-i form-inline-i_balance\">\n                <label htmlFor=\"address-balance\" className=\"multisend-label\">Address with Balance</label>\n                <input type=\"text\" className=\"input\" id=\"address-balance\"/>\n              </div>\n              <button type=\"button\" className=\"button button_add\"></button>\n            </div>\n            <div className=\"table\">\n              <div className=\"table-tr\">\n                <p className=\"table-td\">0.5 BNB</p>\n                <p className=\"table-td table-td_hash\">0xf3a71cc1be5ce833c471e3f25aa391f9cd56e1aa</p>\n                <div className=\"table-td\">\n                  <a href=\"#\" className=\"table-remove\"></a>\n                </div>\n              </div>\n              <div className=\"table-tr\">\n                <p className=\"table-td\">2.001 BNB</p>\n                <p className=\"table-td table-td_hash\">0x67de6a531b58327d075535e89524be5c5672f16b</p>\n                <div className=\"table-td\">\n                  <a href=\"#\" className=\"table-remove\"></a>\n                </div>\n              </div>\n            </div>\n            <Link className=\"button button_next\" to='/3'>Check Information</Link>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport BN from 'bignumber.js'\nimport Web3Utils from 'web3-utils'\nimport swal from 'sweetalert';\nimport Select from 'react-select';\nimport Form from 'react-validation/build/form';\n\nimport DataTable, { createTheme } from 'react-data-table-component'\n\ncreateTheme('solarized', {\n  text: {\n    primary: '#fff',\n    secondary: 'rgb(156, 216, 255)',\n    fontFamily: \"monospace\",\n  },\n  background: {\n    default: 'rgba(255,255,255,0)',\n  },\n  context: {\n    background: 'rgba(255,255,255,1)',\n    text: '#FFFFFF',\n  },\n  divider: {\n    default: '#073642',\n  },\n  button: {\n    default: 'rgba(156, 216, 255, 1)',\n    focus: 'rgba(156, 216, 255,.8)',\n    hover: 'rgba(156, 216, 255,.8)',\n    disabled: 'rgba(156, 216, 255, .5)',\n  },\n  sortFocus: {\n    default: 'rgba(156, 216, 255, .54)',\n  },\n});\n\nconst RecipientsDataTable = (props) => {\n  const columns = [\n    {\n      name: 'Address',\n      selector: 'address',\n      sortable: true,\n      grow: 3.8,\n    },\n    {\n      name: 'Amount, ' + props.tokenSymbol,\n      selector: 'balance',\n      sortable: true,\n      left: true,\n    },\n  ]\n\n  const customStyles = {\n    pagination: {\n      style: {\n        marginBottom: '20px',\n      },\n    },\n    cells: {\n      style: {\n        fontFamily: \"monospace\",\n      },\n    },\n  }\n\n  return (\n    <DataTable\n      title=\"List of recipients\"\n      columns={columns}\n      theme=\"solarized\"\n      customStyles={customStyles}\n      pagination\n      paginationPerPage={10}\n      data={props.data}\n      paginationTotalRows={props.data.length}\n    />\n  )\n}\n\n@inject(\"UiStore\")\n@observer\nexport class ThirdStep extends React.Component {\n  constructor(props){\n    super(props);\n    this.tokenStore = props.UiStore.tokenStore;\n    this.txStore = props.UiStore.txStore;\n    this.gasPriceStore = props.UiStore.gasPriceStore;\n    console.log(this.gasPriceStore.gasPricesArray)\n    this.state = {\n      gasPrice: '',\n      transferGas: 0,\n      approveGas: 0,\n      multisendGas: 0,\n    }\n    this.gasSharesArray = [\n      {label: '20%', value: '20'},\n      {label: '50%', value: '50'},\n      {label: '70%', value: '70'},\n      {label: '100%', value: '100'},\n    ]\n\n    this.props.addNextHandler(this.onNext)\n  }\n  componentDidMount() {\n    if(this.tokenStore.dublicates.length > 0){\n\n      swal({\n        title: `There were duplicated BNB addresses in your list.`,\n        text: `${JSON.stringify(this.tokenStore.dublicates.slice(), null, '\\n')}.\\n Airdrop already combined the balances for those addreses. Please make sure it did the calculation correctly.`,\n        icon: \"warning\",\n      })\n    }\n    (async () => {\n      try {\n        const transferGas = await this.txStore.getTransferGas({slice: this.tokenStore.totalNumberTx, addPerTx: this.tokenStore.arrayLimit})\n        this.setState({transferGas})\n        if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\n          // Ether\n          const multisendGasOrig = await this.txStore.getMultisendGas({slice: this.tokenStore.totalNumberTx, addPerTx: this.tokenStore.arrayLimit})\n          // Gas Limit: 84,279\n          // Gas Used by Transaction: 82,164 (97.49%)\n          const multisendGas = Math.floor(parseInt(multisendGasOrig) * 0.975)\n          this.setState({multisendGas})\n          this.updateCurrentFee()\n        } else {\n          if (parseFloat(this.tokenStore.allowance) >= (parseFloat(this.tokenStore.totalBalance))){\n            const multisendGasOrig = await this.txStore.getMultisendGas({slice: this.tokenStore.totalNumberTx, addPerTx: this.tokenStore.arrayLimit})\n            // Gas Limit: 116,153\n            // Gas Used by Transaction: 81,933 (70.54%) for ERC20\n            // Gas Limit: 170,018\n            // Gas Used by Transaction: 135,628 (79.77%) for ERC777 // TODO: detect token type\n            const multisendGas = Math.floor(parseInt(multisendGasOrig) * 0.71)\n            const approveGas = await this.txStore.getApproveTxGas()\n            this.setState({multisendGas, approveGas})\n            this.updateCurrentFee()\n          } else {\n            const approveGasOrig = await this.txStore.getApproveGas()\n            // Gas Limit: 66,181\n            // Gas Used by Transaction: 44,121 (66.67%)\n            const approveGas = Math.floor(parseInt(approveGasOrig) * 0.6667)\n            this.setState({approveGas})\n          }\n        }\n      } catch(ex) {\n        console.log(\"3:\", ex)\n      }\n    })()\n  }\n\n  updateCurrentFee() {\n    const id = setTimeout(() => {\n      clearTimeout(id)\n      this._updateCurrentFeeImpl()\n    }, 0)\n  }\n\n  _updateCurrentFeeImpl() {\n    const { multisendGas, approveGas, transferGas } = this.state\n    const gasPrice = this.gasPriceStore.standardInHex\n    const approvePlusMultisendGas = (new BN(multisendGas)).plus(new BN(approveGas))\n    if (approvePlusMultisendGas.gt(new BN(transferGas))) {\n      // no savings\n      this.tokenStore.setCurrentFee('0')\n      return\n    }\n    const savedGas = (new BN(transferGas)).minus(approvePlusMultisendGas)\n    const savedGasEthValue = new BN(gasPrice).times(savedGas)\n    const savedGasPerTxEthValue = savedGasEthValue.div(this.tokenStore.totalNumberTx)\n    const newCurrentFee = savedGasPerTxEthValue.times(new BN(parseInt(this.gasPriceStore.selectedGasShare))).div(100)\n    const newCurrentFeeRounded = newCurrentFee.dp(0, 1)\n    this.tokenStore.setCurrentFee(newCurrentFeeRounded.toString(10))\n  }\n\n  onNext = async (wizard) => {\n    // console.log(wizard.step)\n    if (\"inspect\" !== wizard.step.id) {\n      return\n    }\n\n    try {\n      if (new BN(this.tokenStore.totalBalance).gt(new BN(this.tokenStore.defAccTokenBalance))){\n        console.error('Your balance is less than total to send')\n        swal({\n          title: \"Insufficient token balance\",\n          text: `You don't have enough tokens to send to all addresses.\\nAmount needed: ${this.tokenStore.totalBalance} ${this.tokenStore.tokenSymbol}`,\n          icon: \"error\",\n        })\n        return\n      }\n      const multisendGasEthValue = this.getMultisendPlusApproveGasEthValue()\n      const ethBalanceWei = Web3Utils.toWei(this.tokenStore.ethBalance, 'ether');\n      if( multisendGasEthValue.gt(new BN(ethBalanceWei))){\n        const displayMultisendGasEthValue = parseFloat(Web3Utils.fromWei(multisendGasEthValue.toString())).toFixed(5)\n        console.error('please fund you account in ')\n        swal({\n          title: \"Insufficient BNB balance\",\n          text: `You don't have enough BNB to send to all addresses. Amount needed: ${displayMultisendGasEthValue} BNB`,\n          icon: \"error\",\n        })\n        return\n      }\n      if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\n        // Ether\n        wizard.push(\"multisend\")\n      } else {\n        if (new BN(this.tokenStore.allowance).gte(new BN(this.tokenStore.totalBalance))){\n          wizard.push(\"multisend\")\n        } else {\n          wizard.push(\"approve\")\n        }\n      }\n    } catch(e) {\n      console.error(e)\n      swal({\n        title: \"Parsing Error\",\n        text: e.message,\n        icon: \"error\",\n      })\n    }\n  }\n\n  onGasPriceChange = (selected) => {\n    if(selected){\n      this.gasPriceStore.setSelectedGasPrice(selected.value)\n      this.updateCurrentFee()\n    }\n  }\n\n  onGasShareChange = (selected) => {\n    if(selected){\n      this.gasPriceStore.setSelectedGasShare(selected.value)\n      this.updateCurrentFee()\n    }\n  }\n\n  renderTokenBalance() {\n    if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\n      return null\n    }\n    const value = parseFloat(this.tokenStore.defAccTokenBalance)\n    let displayValue = value.toFixed(5)\n    if (\"0.00000\" === displayValue) {\n      displayValue = value\n    }\n    return (\n      <div className=\"send-info-i\">\n        <p>Balance, {this.tokenStore.tokenSymbol}</p>\n        <p className=\"send-info-amount\">{displayValue}</p>\n      </div>\n    )\n  }\n\n  renderTokenAllowance() {\n    if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\n      return null\n    }\n    return (\n      <div className=\"send-info-i\">\n        <p>Allowance, {this.tokenStore.tokenSymbol}</p>\n        <p className=\"send-info-amount\">{this.tokenStore.allowance}</p>\n      </div>\n    )\n  }\n\n  renderTransferGasInfo() {\n    const gasPrice = this.gasPriceStore.standardInHex\n    const transferEthValue = new BN(gasPrice).times(new BN(this.state.transferGas))\n    const displayTransferEthValue = parseFloat(Web3Utils.fromWei(transferEthValue.toString())).toFixed(5)\n    if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\n      // Ether\n      return (\n        <div className=\"send-info-i\">\n          <p>Gas spent without Multisend, BNB</p>\n          <p className=\"send-info-amount\">{displayTransferEthValue}</p>\n        </div>\n      )\n    } else {\n      if (new BN(this.tokenStore.allowance).gte(new BN(this.tokenStore.totalBalance))){\n        return (\n          <div className=\"send-info-i\">\n            <p>Gas spent without Multisend, BNB</p>\n            <p className=\"send-info-amount\">{displayTransferEthValue}</p>\n          </div>\n        )\n      } else {\n        return (\n          <div className=\"send-info-i\">\n            <p>Gas spent without Multisend, BNB</p>\n            <p className=\"send-info-amount\">{displayTransferEthValue}</p>\n          </div>\n        )\n      }\n    }\n  }\n\n  getMultisendPlusApproveGasEthValue() {\n    const gasPrice = this.gasPriceStore.standardInHex\n    const approvePlusMultisendGas = (new BN(this.state.multisendGas)).plus(new BN(this.state.approveGas))\n    const multisendGasEthValue = new BN(gasPrice).times(approvePlusMultisendGas)\n    return multisendGasEthValue\n  }\n\n  renderMultisendGasInfo() {\n    const gasPrice = this.gasPriceStore.standardInHex\n    const approvePlusMultisendGas = (new BN(this.state.multisendGas)).plus(new BN(this.state.approveGas))\n    const multisendGasEthValue = new BN(gasPrice).times(approvePlusMultisendGas)\n    const displayMultisendGasEthValue = parseFloat(Web3Utils.fromWei(multisendGasEthValue.toString())).toFixed(5)\n    if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\n      // Ether\n      return (\n        <div className=\"send-info-i\">\n          <p>Gas spent with Multisend, BNB</p>\n          <p className=\"send-info-amount\">{displayMultisendGasEthValue}</p>\n        </div>\n      )\n    } else {\n      if (new BN(this.tokenStore.allowance).gte(new BN(this.tokenStore.totalBalance))){\n        return (\n          <div className=\"send-info-i\">\n            <p>Gas spent with Multisend, BNB</p>\n            <p className=\"send-info-amount\">{displayMultisendGasEthValue}</p>\n          </div>\n        )\n      } else {\n        return (\n          <div className=\"send-info-i\">\n            <p>Gas spent with Multisend, BNB</p>\n            <p className=\"send-info-amount\">N/A</p>\n          </div>\n        )\n      }\n    }\n  }\n\n  renderSavingsGasInfo() {\n    const { multisendGas, approveGas, transferGas } = this.state\n    const gasPrice = this.gasPriceStore.standardInHex\n    const transferEthValue = new BN(gasPrice).times(new BN(this.state.transferGas))\n    const displayTransferEthValue = Web3Utils.fromWei(transferEthValue.toString())\n    // const approveGasEthValue = new BN(gasPrice).times(new BN(this.state.approveGas))\n    // const displayApproveGasEthValue = Web3Utils.fromWei(approveGasEthValue.toString())\n    const approvePlusMultisendGas = (new BN(multisendGas)).plus(new BN(approveGas))\n    const multisendGasEthValue = new BN(gasPrice).times(approvePlusMultisendGas)\n    const displayMultisendGasEthValue = Web3Utils.fromWei(multisendGasEthValue.toString())\n    const savedGas = (new BN(transferGas)).minus(approvePlusMultisendGas)\n    const savedGasEthValue = new BN(gasPrice).times(savedGas)\n    const displaySavedGasEthValue = parseFloat(Web3Utils.fromWei(savedGasEthValue.toString())).toFixed(5)\n    let sign = \"\"\n    // if (approvePlusMultisendGas.gt(new BN(transferGas))) {\n    //   sign = \"-\"\n    // }\n    if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\n      // Ether\n      return (\n        <div className=\"send-info-i\">\n          <p>Your gas savings, BNB</p>\n          <p className=\"send-info-amount\">{sign}{displaySavedGasEthValue}</p>\n        </div>\n      )\n    } else {\n      if (new BN(this.tokenStore.allowance).gte(new BN(this.tokenStore.totalBalance))){\n        return (\n          <div className=\"send-info-i\">\n            <p>Your gas savings, BNB</p>\n            <p className=\"send-info-amount\">{sign}{displaySavedGasEthValue}</p>\n          </div>\n        )\n      } else {\n        return (\n          <div className=\"send-info-i\">\n            <p>Your gas savings, BNB</p>\n            <p className=\"send-info-amount\">N/A</p>\n          </div>\n        )\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <div className=\"description\">\n            <ol>\n              <li>Choose <strong>Gas Price</strong></li>\n              <li>Choose <strong>Gas Sharing</strong></li>\n              <li>Verify addresses and values</li>\n              <li>Press the <strong>Next</strong> button</li>\n            </ol>\n            <p>\n              <strong>Gas Sharing</strong> is a portion of gas saved by this service that you are OK to tip\n            </p>\n          </div>\n          <Form className=\"form\">\n            <div className=\"form-inline\">\n              <div className=\"form-inline-i form-inline-i_gas-price\">\n                <label htmlFor=\"gas-price\" className=\"multisend-label\">Network Speed (Gas Price)</label>\n                <Select.Creatable\n                  isLoading={this.gasPriceStore.loading}\n                  name=\"gas-price\"\n                  id=\"gas-price\"\n                  value={this.gasPriceStore.selectedGasPrice}\n                  onChange={this.onGasPriceChange}\n                  loadingPlaceholder=\"Fetching gas Price data ...\"\n                  placeholder=\"Please select desired network speed\"\n                  options={this.gasPriceStore.gasPricesArray.slice()}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-inline\">\n              <div className=\"form-inline-i form-inline-i_gas-sharing\">\n                <label htmlFor=\"gas-sharing\" className=\"multisend-label\">Saved Gas Sharing</label>\n                <Select.Creatable\n                  isLoading={false}\n                  name=\"gas-sharing\"\n                  id=\"gas-sharing\"\n                  value={this.gasPriceStore.selectedGasShare}\n                  onChange={this.onGasShareChange}\n                  loadingPlaceholder=\"\"\n                  placeholder=\"Please select desired gas sharing\"\n                  options={this.gasSharesArray.slice()}\n                />\n              </div>\n            </div>\n          </Form>\n          <div className=\"send-info\" style={{padding: \"15px 0px\"}}>\n            <div className=\"send-info-side\">\n              <div className=\"send-info-i\">\n                <p>Total to be Sent, {this.tokenStore.tokenSymbol}</p>\n                <p className=\"send-info-amount\">{this.tokenStore.totalBalance}</p>\n              </div>\n              {\n                this.renderTokenBalance()\n              }\n              { this.renderTransferGasInfo() }\n              <div className=\"send-info-i\">\n                <p>Total Number of tx Needed</p>\n                <p className=\"send-info-amount\">{this.tokenStore.totalNumberTx}</p>\n              </div>\n            </div>\n            <div className=\"send-info-side\">\n              {\n                this.renderTokenAllowance()\n              }\n              <div className=\"send-info-i\">\n                <p>Balance, BNB</p>\n                <p className=\"send-info-amount\">{this.tokenStore.ethBalance}</p>\n              </div>\n              { this.renderMultisendGasInfo() }\n              { this.renderSavingsGasInfo() }\n            </div>\n          </div>\n          <RecipientsDataTable data={this.tokenStore.addressesData} tokenSymbol={this.tokenStore.tokenSymbol}/>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { inject, observer } from \"mobx-react\";\n\n@inject(\"UiStore\")\n@observer\nexport class Transaction extends React.Component {\n  render () {\n    const { tx, explorerUrl } = this.props\n    const { name, hash, status } = tx;\n    let classname;\n    switch(status){\n      case 'mined':\n        classname = 'table-td_check-hash_done'\n        break;\n      case 'error':\n        classname = 'table-td_check-hash_error'\n        break;\n      case 'pending':\n        classname = 'table-td_check-hash_wait'\n        break;\n      default:\n        classname = 'table-td_check-hash_wait'\n    }\n    // const classname = status === 'mined' ? 'table-td_check-hash_done' : 'table-td_check-hash_wait'\n    return (\n      <div className=\"table-tr\">\n        <div className={`table-td table-td_check-hash ${classname}`}>\n          TxHash: <a target=\"_blank\" href={`${explorerUrl}/tx/${hash}`}>{hash}</a> <br/> {name} <br/> Status: {status}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport { Transaction } from \"./Transaction\"\n\n@inject(\"UiStore\")\n@observer\nexport class ApproveStep extends React.Component {\n  constructor(props){\n    super(props);\n    this.props = props\n    this.txStore = props.UiStore.txStore;\n    this.explorerUrl = props.UiStore.web3Store.explorerUrl;\n    this.intervalId = null\n    this.state = {\n      txs: this.txStore.txs,\n    }\n\n    this.props.addNextHandler(this.onNext)\n  }\n  componentDidMount(){\n    (async () => {\n      try {\n        await this.txStore.doApprove()\n        this.setState({txs: this.txStore.txs})\n      } catch(e){\n        console.log('doApprove error:', e)\n      }\n    })()\n    if (null === this.intervalId) {\n      this.intervalId = setInterval(() => {\n        this.setState({txs: this.txStore.txs})\n      }, 1000)\n    }\n  }\n\n  componentWillUnmount() {\n    if (null !== this.intervalId) {\n      clearInterval(this.intervalId)\n      this.intervalId = null\n    }\n  }\n\n  onNext = async (wizard) => {\n    // console.log(wizard.step)\n    if (\"approve\" !== wizard.step.id) {\n      return\n    }\n\n    wizard.push(\"inspect\")\n  }\n\n  render () {\n    const { txs } = this.state\n    const txHashes = txs.map((tx, index) => {\n      return <Transaction key={index} tx={{...tx}} explorerUrl={this.explorerUrl}/>\n    })\n    const mined = txs.reduce((mined, tx) => {\n      const { status } = tx\n      return mined && status === \"mined\"\n    }, true)\n    let status;\n    if(txs.length > 0){\n      if (mined) {\n        status =  \"Approve transaction is mined. Press the Next button to continue\"\n      } else {\n        status = \"Approve transaction was sent out. Now wait until it is mined\"\n      }\n    } else {\n      status = `Waiting for you to sign an Approve transaction in Metamask`\n    }\n    return (\n      <div>\n        <div>\n          <div className=\"description\">\n            <div>\n              Sign an Approve transaction in MetaMask<br />to send tokens to many recipients from the Multisend smart contract\n            </div>\n            <p>&nbsp;</p>\n            <ol>\n              <li>Confirm Approve transaction in MetaMask</li>\n              <li>Wait for the transaction to be mined</li>\n              <li>Press the <strong>Next</strong> button</li>\n            </ol>\n          </div>\n          <form className=\"form\">\n            <p>{status}</p>\n            <div className=\"table\">\n              {txHashes}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport { Transaction } from \"./Transaction\"\n\n@inject(\"UiStore\")\n@observer\nexport class FourthStep extends React.Component {\n  constructor(props){\n    super(props);\n    this.txStore = props.UiStore.txStore;\n    this.tokenStore = props.UiStore.tokenStore;\n    this.explorerUrl = props.UiStore.web3Store.explorerUrl;\n    this.intervalId = null\n    this.state = {\n      txs: this.txStore.txs,\n      totalNumberOftx: this.calcTotalNumberOftx(),\n    }\n    this.doSendExecuted = false\n\n    this.props.addNextHandler(this.onNext)\n  }\n\n  onNext = async (wizard) => {\n    // console.log(wizard.step)\n    if (\"multisend\" !== wizard.step.id) {\n      return\n    }\n\n    // reload page to make sure that all caches are cleared\n    location.reload()\n  }\n\n  componentDidMount(){\n    (async () => {\n      try {\n        if (!this.doSendExecuted) {\n          this.doSendExecuted = true\n          await this.txStore.doSend()\n          this.setState({\n            txs: this.txStore.txs,\n            totalNumberOftx: this.calcTotalNumberOftx(),\n          })\n        }\n      } catch(e){\n        console.log('doApprove error:', e)\n      }\n    })()\n    if (null === this.intervalId) {\n      this.intervalId = setInterval(() => {\n        this.setState({\n          txs: this.txStore.txs,\n          totalNumberOftx: this.calcTotalNumberOftx(),\n        })\n      }, 1000)\n    }\n  }\n\n  componentWillUnmount() {\n    if (null !== this.intervalId) {\n      clearInterval(this.intervalId)\n      this.intervalId = null\n    }\n  }\n\n  calcTotalNumberOftx() {\n    let totalNumberOftx;\n\n    // if(Number(this.tokenStore.totalBalance) > Number(this.tokenStore.allowance)){\n    //   totalNumberOftx = Number(this.tokenStore.totalNumberTx) + 1;\n    // } else {\n      totalNumberOftx = Number(this.tokenStore.totalNumberTx)\n    // }\n    return totalNumberOftx\n  }\n\n  render () {\n    const { txs, totalNumberOftx } = this.state\n    const txHashes = txs.map((tx, index) => {\n      return <Transaction key={index} tx={{...tx}} explorerUrl={this.explorerUrl}/>\n    })\n    const mined = txs.reduce((mined, tx) => {\n      const { status } = tx\n      return mined && status === \"mined\"\n    }, true)\n    let status;\n    if(txs.length === totalNumberOftx){\n      if (mined) {\n        status =  \"All transactions are mined. Congratulations!\"\n      } else {\n        status =  \"Transactions were sent out. Now wait until all transactions are mined.\"\n      }\n    } else {\n      const txCount = totalNumberOftx - txs.length\n      status = `Waiting for you to sign transaction in Metamask`\n      if (totalNumberOftx > 1) {\n        status = `Waiting for you to sign ${txCount} transactions in Metamask`\n      }\n    }\n    let label = \"Sign a multisend transaction in MetaMask\"\n    if (totalNumberOftx > 1) {\n      label = `Sign all ${totalNumberOftx} multisend transactions in MetaMask`\n    }\n    let label2 = \"to send tokens to many recipients from the Multisend smart contract\"\n    if (\"BNB\" === this.tokenStore.tokenSymbol) {\n      label2 = \"to send BNB to many recipients from the Multisend smart contract\"\n    }\n    return (\n      <div>\n        <div>\n          <div className=\"description\">\n            <div>\n              {label}<br />{label2}\n            </div>\n            <p>&nbsp;</p>\n            <ol>\n              <li>Confirm all multisend transactions in MetaMask</li>\n              <li>Wait for all transactions to be mined</li>\n              <li>Check transactions on etherscan</li>\n              <li>Press the <strong>Next</strong> button</li>\n            </ol>\n          </div>\n          <form className=\"form\">\n            <p>{status}</p>\n            <div className=\"table\">\n              {txHashes}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class FifthStep extends React.Component {\n  render () {\n    return (\n      <div className=\"multisend-container multisend-container_bg container_opacity\">\n        <div className=\"content\">\n          <div className=\"transactions-title\">\n            <h1 className=\"title\"><strong>Table Name</strong></h1>\n            <p className=\"title\">Total: <strong>3789.093 BNB</strong></p>\n          </div>\n          <div className=\"table\">\n            <div className=\"table-tr table-tr_title\">\n              <div className=\"table-td\">Token Name</div>\n              <div className=\"table-td\">Address</div>\n              <div className=\"table-td\">Amount</div>\n            </div>\n            <div className=\"table-tr\">\n              <div className=\"table-td\">\n                <p>Name 1</p>\n              </div>\n              <div className=\"table-td\">\n                <p className=\"break-all\">0xc6300135a8fcd43123bb486ff06831b5345d0971</p>\n              </div>\n              <div className=\"table-td\">\n                <p>2.5672 BNB</p>\n              </div>\n            </div>\n            <div className=\"table-tr\">\n              <div className=\"table-td\">\n                <p>Name 2</p>\n              </div>\n              <div className=\"table-td\">\n                <p className=\"break-all\">0x0a7772cdbeee6dbdfdf944dd3e11d32d6a183bde</p>\n              </div>\n              <div className=\"table-td\">\n                <p>8.009 BNB</p>\n              </div>\n            </div>\n          </div>\n          <Link className=\"button button_next\" to='/'>Back to Home</Link>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport swal from 'sweetalert';\nimport { Link } from 'react-router-dom';\nimport generateElement from '../generateElement'\n\n@inject(\"UiStore\")\n@observer\nexport class Retry extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onTxInput = this.onTxInput.bind(this)\n    this.txStore = props.UiStore.txStore;\n    \n    this.state = {\n      txHash: ''\n    }\n  }\n  \n  onTxInput(e){\n    const txHash = e.target.value;\n    setTimeout(async () => {\n      if(txHash.length === 66){\n        // https://kovan.etherscan.io/tx/0x234cb7950c9239ce64033647e14b8fdd915106cad24c8ae57b0eb9052e8ec79a\n        const txdata = await this.txStore.getTxReceipt(txHash);\n        console.log(txdata)\n        this.setState({txHash})\n      } else {\n        swal({\n          content: generateElement(`Tx Hash is not valid`),\n          icon: \"error\",\n        })\n      }\n\n    }, 750)\n  }\n  render () {\n    return (\n      <div className=\"multisend-container multisend-container_bg container_opacity\">\n        <div className=\"content\">\n          <div className=\"table\">\n            <label htmlFor=\"txhash\" className=\"multisend-label\">Transaction Hash</label>\n            <input onChange={this.onTxInput} type=\"text\" className=\"input\" id=\"txhash\"/>\n            <div className=\"table-tr table-tr_title\">\n              <div className=\"table-td\">Token Name</div>\n              <div className=\"table-td\">Address</div>\n              <div className=\"table-td\">Amount</div>\n            </div>\n            <div className=\"table-tr\">\n              <div className=\"table-td\">\n                <p>Name 1</p>\n              </div>\n              <div className=\"table-td\">\n                <p className=\"break-all\">0xc6300135a8fcd43123bb486ff06831b5345d0971</p>\n              </div>\n              <div className=\"table-td\">\n                <p>2.5672 BNB</p>\n              </div>\n            </div>\n            <div className=\"table-tr\">\n              <div className=\"table-td\">\n                <p>Name 2</p>\n              </div>\n              <div className=\"table-td\">\n                <p className=\"break-all\">0x0a7772cdbeee6dbdfdf944dd3e11d32d6a183bde</p>\n              </div>\n              <div className=\"table-td\">\n                <p>8.009 BNB</p>\n              </div>\n            </div>\n          </div>\n          <Link className=\"button button_next\" to='/'>Back to Home</Link>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class Welcome extends React.Component {\n  render () {\n    return (\n      <div className=\"multisend-container multisend-container_bg\">\n        <div className=\"content\">\n          <h1 className=\"title\"><strong>Welcome to Token</strong> MultiSender</h1>\n          <p className=\"description\">\n            Desc youtube video how to use multisender\n          </p>\n          <p>\n            Already have JSON or CSV prepared?\n          </p>\n          <Link className=\"button button_next\" to='/1'>Proceed for JSON/CSV</Link>\n\n          <p>\n            Transaction Wizard. Build a list of addresses and balances using UI.\n          </p>\n          <Link className=\"button button_next\" to='/1'>Proceed for Transaction Wizard</Link>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { WithWizard } from 'react-albus';\n\nconst Navigation = () => (\n  <WithWizard\n    render={({ next, previous, step, steps, push }) => (\n      <div className=\"multisend-buttons\">\n        {(\"home\" !== step.id && \"multisend\" !== step.id) && (\n          <button className=\"multisend-button multisend-button_prev\" onClick={previous}>\n            Back\n          </button>\n        )}\n\n        {\"multisend\" === step.id && (\n          <button className=\"multisend-button multisend-button_prev\" onClick={next}>\n            Home\n          </button>\n        )}\n\n        {\"multisend\" !== step.id && (\n          <button className=\"multisend-button multisend-button_next\" onClick={next}>\n            Next\n          </button>\n        )}\n      </div>\n    )}\n  />\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport { Header, FirstStep, SecondStep, ThirdStep, ApproveStep, FourthStep, FifthStep, Retry, Welcome } from './components';\nimport { Route, Redirect } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { inject } from \"mobx-react\";\nimport './assets/stylesheets/application.css';\nimport Navigation from './components/Navigation';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { Line } from 'rc-progress';\nimport { PulseLoader} from 'react-spinners';\n\n\n// const RoutedWizard = ({ children }) =>\n//   <Route\n//     render={({ history, match: { url } }) =>\n//       <Wizard history={history} basename={url}>\n//         {children}\n//       </Wizard>}\n//   />;\n\n// const PrivateRoute = ({ component: Component, startedUrl, ...rest }) => (\n//   <Route\n//     {...rest}\n//     render={props =>\n//       startedUrl === '#/' || startedUrl === '#/1' ? (\n//         <Component {...props} />\n//       ) : (\n//         <Redirect\n//           to={{\n//             pathname: \"/\"\n//           }}\n//         />\n//       )\n//     }\n//   />\n// );\n\n@inject(\"UiStore\")\nexport class App extends React.Component {\n  constructor(props){\n    super(props);\n    this.tokenStore = props.UiStore.tokenStore;\n    this.web3Store = props.UiStore.web3Store;\n    this.nextHandlers = []\n    this.state = {\n      loading: this.web3Store.loading,\n    }\n  }\n\n  componentDidMount() {\n    (async () => {\n      try {\n        await this.tokenStore.proxyMultiSenderAddress()\n        this.setState((state, props) => {\n          return {loading: this.web3Store.loading}\n        })\n      } catch(ex) {\n        console.log(\"App:\", ex)\n      }\n    })()\n  }\n\n  onNext = (wizard) => {\n    (async () => {\n      try {\n        this.nextHandlers.forEach(async handler => {\n          await handler(wizard)\n        })\n      } catch(ex) {\n        console.log(\"onNext:\", ex)\n      }\n    })()\n  }\n\n  addNextHandler = (handler) => {\n    this.nextHandlers.push(handler)\n  }\n\n  render(){\n    const { startedUrl } = this.web3Store;\n    if (!(startedUrl === '#/' || startedUrl === '#/home')) {\n      this.web3Store.setStartedUrl('#/')\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\"\n          }}\n        />\n      )\n    }\n\n    return (\n      <div>\n        <Header />\n        <Route\n          render={({ history }) => (\n            <Wizard\n              history={history}\n              onNext={this.onNext}\n              render={({ step, steps }) => (\n                <div className=\"multisend-container multisend-container_bg\">\n                  <div className=\"content\">\n                    <h1 className=\"title\"><strong>Welcome to Token</strong> MultiSender</h1>\n                    <Line\n                      percent={(steps.indexOf(step) + 1) / steps.length * 100}\n                      className=\"pad-b\"\n                    />\n                    <div className='sweet-loading'>\n                      <PulseLoader\n                        color={'#123abc'}\n                        loading={this.state.loading}\n                        />\n                    </div>\n                    <TransitionGroup>\n                      <CSSTransition\n                        key={step.id}\n                        classNames=\"multisend\"\n                        timeout={{ enter: 500, exit: 500 }}\n                      >\n                        <Steps key={step.id} step={step}>\n                          <Step id=\"home\">\n                            <FirstStep addNextHandler={this.addNextHandler}/>\n                          </Step>\n                          <Step id=\"inspect\">\n                            <ThirdStep addNextHandler={this.addNextHandler}/>\n                          </Step>\n                          <Step id=\"approve\">\n                            <ApproveStep addNextHandler={this.addNextHandler}/>\n                          </Step>\n                          <Step id=\"multisend\">\n                            <FourthStep addNextHandler={this.addNextHandler}/>\n                          </Step>\n                        </Steps>\n                      </CSSTransition>\n                    </TransitionGroup>\n                    <Navigation />\n                  </div>\n                </div>\n              )}\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n","import Web3 from 'web3'\n\nconst getAccounts = () => {\n  return new Promise(function (resolve, reject) {\n    (async () => {\n      try {\n        // Will open the MetaMask UI\n        // You should disable this button while the request is pending!\n        const { ethereum } = window;\n        const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n        resolve(accounts)\n      } catch (error) {\n        console.error(error);\n        reject(error)\n      }\n    })()\n  })\n}\n\nlet _web3Config = null\nlet _web3Promise = null\nlet getWeb3 = () => {\n  if (!_web3Promise) {\n    _web3Promise = new Promise(function (resolve, reject) {\n      if (null !== _web3Config) {\n        resolve(_web3Config)\n        return\n      }\n      // Wait for loading completion to avoid race conditions with ethereum injection timing.\n      window.addEventListener('load', function () {\n        // Checking if ethereum has been injected by the browser (Mist/MetaMask)\n        if (window.hasOwnProperty(\"ethereum\")) {\n          // Use Mist/MetaMask's provider.\n          let web3 = new Web3(Web3.givenProvider)\n          web3.eth.net.getId().then((netId) => {\n            let netIdName, trustApiName, explorerUrl;\n            console.log('netId', netId);\n            netId = \"\" + netId\n            switch (netId) {\n              case \"56\":\n                netIdName = 'Mainnet'\n                trustApiName = 'bsc'\n                explorerUrl = 'https://bscscan.com'\n                console.log('This is Foundation', netId)\n                break;\n              case \"97\":\n                netIdName = 'Testnet'\n                trustApiName = 'bsc'\n                explorerUrl = 'https://testnet.bscscan.com'\n                console.log('This is BSC Testnet', netId)\n                break;\n              default:\n                netIdName = 'Unknown'\n                console.log('This is an unknown network.', netId)\n            }\n            document.title = `${netIdName} - MultiSender dApp`\n            getAccounts().then(accounts => {\n              const firstAccount = accounts.length > 0 ? accounts[0] : null\n              var defaultAccount = web3.eth.defaultAccount || firstAccount || null;\n              if(defaultAccount === null){\n                reject({message: 'Please unlock your metamask and refresh the page'})\n                return\n              }\n              if (web3.eth.estimateGas.__proto__ && web3.eth.estimateGas.__proto__.call) {\n                console.log(\"typeof web3.eth.estimateGas.__proto__.call:\", typeof web3.eth.estimateGas.__proto__.call)\n                web3.eth.estimateGas.call = web3.eth.estimateGas.__proto__.call\n                console.log(\"typeof web3.eth.estimateGas.call:\", typeof web3.eth.estimateGas.call)\n              }\n              const results = {\n                web3Instance: web3,\n                netIdName,\n                netId,\n                injectedWeb3: true,\n                defaultAccount,\n                trustApiName,\n                explorerUrl\n              }\n              _web3Config = results\n              resolve(_web3Config)\n            }).catch(err => {\n              reject(err)\n            })\n          }).catch(err => {\n            reject(err)\n          })\n\n          console.log('Injected web3 detected.');\n\n        } else {\n          // Fallback to localhost if no web3 injection.\n          const errorMsg = `Metamask is not installed. Please go to\n          https://metamask.io and return to this page after you installed it`\n          console.log('No web3 instance injected, using Local web3.');\n          console.error('Metamask not found');\n          reject({message: errorMsg})\n          return\n        }\n      })\n    })\n  }\n  return _web3Promise\n}\n\nexport default getWeb3\n","import { action, observable } from \"mobx\";\nimport getWeb3 from '../getWeb3';\nimport Web3 from 'web3';\n\nclass Web3Store {\n  @observable web3 = {};\n  @observable defaultAccount = '';\n  @observable loading = true;\n  @observable errors = [];\n  @observable userTokens = [];\n  @observable explorerUrl = '';\n  @observable startedUrl = window.location.hash\n  constructor(rootStore) {\n    this.userTokensInitialized = false\n  }\n  @action\n  setExplorerUrl(url){\n    this.explorerUrl = url\n  }\n  @action\n  setStartedUrl(url){\n    this.startedUrl = url;\n  }\n\n  async getWeb3Promise() {\n    return getWeb3().then(async (web3Config) => {\n      if ('' !== this.explorerUrl) {\n        return this\n      }\n      const {web3Instance, defaultAccount, netId, netIdName} = web3Config;\n      this.defaultAccount = defaultAccount;\n      // this.web3 = new Web3(web3Instance.currentProvider);\n      this.web3 = web3Instance;\n      this.netId = netId;\n      this.netIdName = netIdName;\n      await this.getUserTokens(web3Config)\n      this.setExplorerUrl(web3Config.explorerUrl)\n      console.log('web3 loaded')\n      return this\n    }).catch((e) => {\n      console.error(e,'web3 not loaded')\n      this.errors.push(e.message)\n      throw e\n    })\n  }\n\n  async getUserTokens({trustApiName, defaultAccount}) {\n    return new Promise((resolve, reject) => {\n      if (this.userTokensInitialized) {\n        resolve(this)\n        return\n      }\n\n      window.fetch(\n        `https://api.bscscan.com/api?module=account&action=tokentx&address=${defaultAccount}&startblock=0&endblock=999999999&sort=desc&apikey=JITRSI1KS7U5N6J33H2Z3C9PJPM6334YE5`\n      ).then((res) => {\n        return res.json()\n      }).then((res) => {\n        if (!(res.result && (typeof res.result === \"object\") && res.result.hasOwnProperty(\"length\"))) {\n          this.loading = false;\n          reject(\"Failed to load user tokens. Try again a minute later please.\")\n          return\n        }\n        let tokens = res.result.filter(tx => {\n          if (!tx.hasOwnProperty(\"to\") || tx[\"to\"].toLowerCase() != defaultAccount.toLowerCase()) {\n            return false\n          }\n          if (!tx.hasOwnProperty(\"contractAddress\")) {\n            return false\n          }\n          if (!tx.hasOwnProperty(\"tokenName\")) {\n            return false\n          }\n          if (!tx.hasOwnProperty(\"tokenSymbol\")) {\n            return false\n          }\n          if (!tx.hasOwnProperty(\"tokenDecimal\")) {\n            return false\n          }\n          return true\n        }).map(tx => {\n          const tokenAddress = tx[\"contractAddress\"];\n          const tokenName = tx[\"tokenName\"];\n          const tokenSymbol = tx[\"tokenSymbol\"];\n          const tokenDecimal = tx[\"tokenDecimal\"];\n          return {label: `${tokenSymbol} - ${tokenAddress}`, value: tokenAddress, tokenSymbol}\n        })\n        let tokensUniqueObj = {}\n        for (let i = 0; i < tokens.length; i++) {\n          let token = tokens[i]\n          tokensUniqueObj[token.value] = token\n        }\n        let tokensUnique = Object.keys(tokensUniqueObj).map(tokenAddress => tokensUniqueObj[tokenAddress])\n        tokensUnique.unshift({\n          value: '0x000000000000000000000000000000000000bEEF',\n          label: \"BNB - Smart Chain Native Currency\"\n        })\n        this.userTokens = tokensUnique;\n        this.userTokensInitialized = true\n        this.loading = false;\n        resolve(this)\n      }).catch((e) => {\n        this.loading = false;\n        console.error(e);\n        reject(e)\n      })\n    })\n  }\n}\n\nexport default Web3Store;\n","import { action, observable, computed } from \"mobx\";\nimport ERC20ABI from '../abis/ERC20ABI.json'\n// import StormMultiSenderABI from '../abis/StormMultisender.json'\nimport Web3Utils from 'web3-utils';\n\nconst BN = require('bignumber.js');\nfunction add(a, b) {\n  return new BN(a).plus(new BN(b));\n}\nclass TokenStore {\n  @observable decimals = '';\n  @observable jsonAddresses = [];\n  @observable tokenAddress = '';\n  @observable defAccTokenBalance = ''\n  @observable allowance = ''\n  @observable currentFee = '0'\n  @observable tokenSymbol = ''\n  @observable ethBalance = ''\n  @observable balances_to_send = []\n  @observable addresses_to_send = []\n  @observable invalid_addresses = []\n  @observable filteredAddresses = []\n  @observable totalBalance = '0'\n  @observable arrayLimit = 0\n  @observable errors = []\n  @observable dublicates = []\n\n  constructor(rootStore) {\n    this.web3Store = rootStore.web3Store;\n    this.gasPriceStore = rootStore.gasPriceStore;\n\n  }\n\n  async proxyMultiSenderAddress() {\n    try {\n      const web3Obj = await this.web3Store.getWeb3Promise()\n      const netIdEnvVarName = \"REACT_APP_PROXY_MULTISENDER_\" + web3Obj.netIdName.toUpperCase()\n      const contractAddress = process.env[netIdEnvVarName]\n      return contractAddress;\n    } catch (ex) {\n      console.log(ex)\n    }\n    return \"\"\n  }\n\n  @action\n  async getDecimals(address) {\n    if ('' !== this.decimals) {\n      return this.decimals\n    }\n    try{\n      const web3 = this.web3Store.web3;\n      const token = new web3.eth.Contract(ERC20ABI, address);\n      this.decimals = await token.methods.decimals().call();\n      return this.decimals\n    } catch(e) {\n      this.errors.push('Cannot get decimals for token contract.\\n Please make sure you are on the right network and token address exists')\n      console.error('Get Decimals', e)\n    }\n  }\n\n  async getBalance() {\n    if ('' !== this.defAccTokenBalance) {\n      return this.defAccTokenBalance\n    }\n    try {\n        const web3 = this.web3Store.web3;\n        const token = new web3.eth.Contract(ERC20ABI, this.tokenAddress);\n        const defAccTokenBalance = await token.methods.balanceOf(this.web3Store.defaultAccount).call();\n        this.defAccTokenBalance = new BN(defAccTokenBalance).div(this.multiplier).toString(10)\n        web3.eth.subscribe(\"newBlockHeaders\", async (err, result) => {\n          if (err) {\n            console.log(err);\n            return\n          }\n          const defAccTokenBalance = await token.methods.balanceOf(this.web3Store.defaultAccount).call();\n          this.defAccTokenBalance = new BN(defAccTokenBalance).div(this.multiplier).toString(10)\n        })\n        return this.defAccTokenBalance\n    }\n    catch(e){\n      this.errors.push(`${this.web3Store.defaultAccount} doesn't have token balance.\\n Please make sure you are on the right network and token address exists`)\n      console.error('getBalance',e)\n    }\n  }\n  async getEthBalance() {\n    if ('' !== this.ethBalance) {\n      return this.ethBalance\n    }\n    try {\n      const web3 = this.web3Store.web3;\n      let ethBalance =  await web3.eth.getBalance(this.web3Store.defaultAccount)\n      ethBalance = Web3Utils.fromWei(ethBalance)\n      this.ethBalance = new BN(ethBalance).toFormat(3)\n      web3.eth.subscribe(\"newBlockHeaders\", async (err, result) => {\n        if (err) {\n          console.log(err);\n          return\n        }\n        let ethBalance =  await web3.eth.getBalance(this.web3Store.defaultAccount)\n        ethBalance = Web3Utils.fromWei(ethBalance)\n        this.ethBalance = new BN(ethBalance).toFormat(3)\n      })\n      return this.ethBalance\n    }\n    catch(e){\n      console.error(e)\n    }\n  }\n  async getTokenSymbol(tokenAddress) {\n    if ('' !== this.tokenSymbol) {\n      return this.tokenSymbol\n    }\n    try {\n      const web3 = this.web3Store.web3;\n      const token = new web3.eth.Contract(ERC20ABI, tokenAddress);\n      this.tokenSymbol = await token.methods.symbol().call();\n      return this.tokenSymbol\n    }\n    catch(e){\n      this.errors.push('Token with this Address doesnt exist.\\n Please make sure you are on the right network and token address exists')\n      console.error(e)\n    }\n  }\n  @action\n  async getAllowance() {\n    if ('' !== this.allowance) {\n      return this.allowance\n    }\n    try {\n      const web3 = this.web3Store.web3;\n      const token = new web3.eth.Contract(ERC20ABI, this.tokenAddress);\n      const allowance = await token.methods.allowance(this.web3Store.defaultAccount, await this.proxyMultiSenderAddress()).call();\n      this.allowance = new BN(allowance).div(this.multiplier).toString(10)\n      web3.eth.subscribe(\"newBlockHeaders\", async (err, result) => {\n        if (err) {\n          console.log(err);\n          return\n        }\n        const allowance = await token.methods.allowance(this.web3Store.defaultAccount, await this.proxyMultiSenderAddress()).call();\n        this.allowance = new BN(allowance).div(this.multiplier).toString(10)\n      })\n      return this.allowance\n    }\n    catch(e){\n      this.errors.push(`Token address doesn't have allowance method.\\n Please make sure you are on the right network and token address exists.\\n\n         Your account: ${this.web3Store.defaultAccount}`)\n      console.error('GetAllowance',e)\n    }\n  }\n\n  @action\n  async getCurrentFee(){\n    // const currentFee = \"100000000000000\"; // 0.0001 BNB\n    // this.currentFee = Web3Utils.fromWei(currentFee)\n    return this.currentFee\n    // try {\n    //   this.web3Store.getWeb3Promise().then(async () => {\n    //     const web3 = this.web3Store.web3;\n    //     const multisender = new web3.eth.Contract(StormMultiSenderABI, await this.proxyMultiSenderAddress());\n    //     const currentFee = await multisender.methods.currentFee(this.web3Store.defaultAccount).call();\n    //     this.currentFee = Web3Utils.fromWei(currentFee)\n    //     return this.currentFee\n    //   })\n    // }\n    // catch(e){\n    //   console.error('getCurrentFee',e)\n    // }\n  }\n\n  setCurrentFee(currentFee){\n    this.currentFee = Web3Utils.fromWei(currentFee)\n  }\n\n  async getArrayLimit(){\n    this.arrayLimit = 200;\n    // this.arrayLimit = 1;\n    return this.arrayLimit\n    // try {\n    //   await this.web3Store.getWeb3Promise().then(async () => {\n    //     const web3 = this.web3Store.web3;\n    //     const multisender = new web3.eth.Contract(StormMultiSenderABI, await this.proxyMultiSenderAddress());\n    //     await multisender.methods.arrayLimit().call();\n    //     return this.arrayLimit\n    //   })\n    // }\n    // catch(e){\n    //   console.error('GetArrayLimit', e)\n    // }\n  }\n\n  @action\n  async setTokenAddress(tokenAddress) {\n    await this.web3Store.getWeb3Promise()\n    await this.getCurrentFee()\n    await this.getEthBalance()\n    await this.getArrayLimit()\n    this.decimals = '';\n    this.defAccTokenBalance = ''\n    this.allowance = ''\n    this.tokenSymbol = ''\n    if(Web3Utils.isAddress(this.web3Store.defaultAccount) && tokenAddress !== \"0x000000000000000000000000000000000000bEEF\"){\n      this.tokenAddress = tokenAddress;\n      await this.getDecimals(tokenAddress)\n      await this.getBalance()\n      await this.getAllowance()\n      await this.getTokenSymbol(tokenAddress)\n    } else {\n      this.tokenAddress = tokenAddress;\n      this.tokenSymbol = \"BNB\"\n      this.decimals = 18;\n      this.defAccTokenBalance = this.ethBalance;\n    }\n  }\n\n  @action\n  setDecimals(decimals) {\n    this.decimals = decimals;\n  }\n\n  @action\n  setJsonAddresses(addresses){\n    this.jsonAddresses = addresses;\n  }\n\n  @action\n  async reset(){\n    this.decimals = '';\n    this.jsonAddresses = [];\n    this.tokenAddress = '';\n    this.defAccTokenBalance = ''\n    this.allowance = ''\n    this.currentFee = '0'\n    this.tokenSymbol = ''\n    this.ethBalance = ''\n    this.balances_to_send = []\n    this.addresses_to_send = []\n    this.invalid_addresses = []\n    this.filteredAddresses = []\n    this.totalBalance = '0'\n    this.arrayLimit = 0\n    this.errors = []\n    this.dublicates = []\n  }\n\n  @action\n  async parseAddresses(){\n    this.addresses_to_send = []\n    this.dublicates = []\n    this.totalBalance = 0;\n    this.invalid_addresses = [];\n    this.balances_to_send = [];\n    return new Promise((res, rej) => {\n      try {\n        this.jsonAddresses.forEach((account, index) => {\n          if(Object.keys(account).length === 0){\n            rej({message: `There was an error parsing ${JSON.stringify(account)} at line ${index}`})\n          }\n          let address = Object.keys(account)[0].replace(/\\s/g, \"\").replace(\"0X\", \"0x\")\n          address = Web3Utils.toChecksumAddress(address)\n          if(!Web3Utils.isAddress(address)){\n            this.invalid_addresses.push(address);\n          } else {\n            let balance = Object.values(account)[0];\n            this.totalBalance = new BN(balance).plus(this.totalBalance).toString(10)\n            // console.log('balance,', balance)\n            balance = this.multiplier.times(balance);\n            const indexAddr = this.addresses_to_send.indexOf(address);\n            if(indexAddr === -1){\n              this.addresses_to_send.push(address);\n              this.balances_to_send.push(balance.toString(10))\n            } else {\n              if(this.dublicates.indexOf(address) === -1){\n                this.dublicates.push(address);\n              }\n              this.balances_to_send[indexAddr] = (new BN(this.balances_to_send[indexAddr]).plus(balance)).toString(10)\n            }\n          }\n        })\n\n        this.jsonAddresses = this.addresses_to_send.map((addr, index) => {\n          let obj = {}\n          obj[addr] = (new BN(this.balances_to_send[index]).div(this.multiplier)).toString(10)\n          return obj;\n        })\n        res(this.jsonAddresses)\n        if(this.tokenAddress === \"0x000000000000000000000000000000000000bEEF\") {\n          this.allowance = this.totalBalance\n        }\n      } catch(e){\n        rej(e)\n      }\n    })\n  }\n\n  @computed get totalBalanceWithDecimals() {\n    return new BN(this.totalBalance).times(this.multiplier).toString(10)\n  }\n  @computed get multiplier(){\n    const decimals = Number(this.decimals)\n    return new BN(10).pow(decimals)\n  }\n\n  @computed get totalNumberTx() {\n    return Math.ceil(this.jsonAddresses.length/this.arrayLimit);\n  }\n\n  @computed get addressesData() {\n    return this.jsonAddresses.map((account) => {\n      const address = Object.keys(account)[0].replace(/\\s/g, \"\");;\n      const balance = Object.values(account)[0];\n      return {address, balance}\n    })\n  }\n\n  // @computed get totalCostInEth(){\n  //   const standardGasPrice = Web3Utils.toWei(this.gasPriceStore.selectedGasPrice.toString(), 'gwei');\n  //   const currentFeeInWei = Web3Utils.toWei(this.currentFee);\n  //   const tx = new BN(standardGasPrice).times(new BN('5000000'))\n  //   const txFeeMiners = tx.times(new BN(this.totalNumberTx))\n  //   const contractFee = new BN(currentFeeInWei).times(this.totalNumberTx);\n  //\n  //   return Web3Utils.fromWei(txFeeMiners.plus(contractFee).toString(10))\n  // }\n\n}\n\nexport default TokenStore;\n","import { action, observable, computed } from \"mobx\";\nimport Web3Utils from 'web3-utils';\n\nclass GasPriceStore {\n  @observable gasPrices = {};\n  @observable loading = true;\n  @observable gasPricesArray = [\n    {label: 'fast', value: '7'},\n    {label: 'standard', value: '6'},\n    {label: 'slow', value: '5'},\n    {label: 'instant', value: '10'},\n  ];\n  @observable selectedGasPrice = '5'\n  @observable selectedGasShare = '50'\n  gasPricePromise = null;\n  constructor(rootStore) {\n    this.getGasPrices()\n  }\n\n  async getGasPrices(){\n    this.gasPricePromise = fetch('https://raw.githubusercontent.com/boredapedefi/gasprice/main/gasprice.json').then((response) => {\n      return response.json()\n    }).then((data) => {\n      this.gasPricesArray.map((v) => {\n        v.value = data[v.label]\n        v.label = `${v.label}: ${data[v.label]} gwei`\n        return v;\n      })\n      this.selectedGasPrice = data.fast;\n      this.gasPrices = data;\n      this.loading = false;\n    }).catch((e) => {\n      this.loading = true;\n      console.error(e)\n    })\n  }\n\n  @computed get standardInHex() {\n    const toWei = Web3Utils.toWei(this.selectedGasPrice.toString(), 'gwei')\n    return Web3Utils.toHex(toWei)\n  }\n  @action\n  setSelectedGasPrice(value) {\n    this.selectedGasPrice = value;\n  }\n\n  @action\n  setSelectedGasShare(value) {\n    this.selectedGasShare = value;\n  }\n}\n\nexport default GasPriceStore;\n","import { action, observable, computed, autorun, toJS } from \"mobx\";\nimport Web3Utils from 'web3-utils'\nimport ERC20ABI from \"../abis/ERC20ABI.json\"\nimport MultiSenderAbi from \"../abis/StormMultisender.json\"\nimport Web3 from \"web3\";\nimport { observer } from \"mobx-react\";\nimport swal from 'sweetalert';\nconst BN = require('bignumber.js');\n\n\nclass TxStore {\n  @observable txs = []\n  txHashToIndex = {}\n  @observable approval = '';\n  constructor(rootStore) {\n    this.tokenStore = rootStore.tokenStore\n    this.web3Store = rootStore.web3Store\n    this.gasPriceStore = rootStore.gasPriceStore\n    this.interval = null;\n  }\n\n  @action\n  async reset() {\n    this.txs = []\n    this.txHashToIndex = {}\n    this.approval = '';\n    this.keepRunning = false;\n    clearInterval(this.interval);\n  }\n\n  @action\n  async doSend(){\n    this.keepRunning = true;\n    this.txs = [];\n    this.approval = '';\n    if(new BN(this.tokenStore.totalBalance === \"\" ? \"0\" : this.tokenStore.totalBalance).gt(new BN(this.tokenStore.allowance === \"\" ? \"0\" : this.tokenStore.allowance))){\n      this._approve();\n      const interval = setInterval(() => {\n        if(this.approval){\n          const index = this.txHashToIndex[this.approval];\n          console.log('checking autorun', index, this.approval, this.txHashToIndex, toJS(this.txs))\n          if(this.txs[index] && this.txs[index].status === 'mined'){\n            clearInterval(interval);\n            console.log('lets GO!', this.tokenStore.totalNumberTx, this.tokenStore.arrayLimit)\n            setTimeout(() => {\n              this._multisend({slice: this.tokenStore.totalNumberTx, addPerTx: this.tokenStore.arrayLimit})\n            }, 1000)\n          }\n        } else {\n          console.log('checking autorun', this.txHashToIndex, toJS(this.txs))\n        }\n      }, 3000)\n      this.interval = interval;\n    } else {\n      this._multisend({slice: this.tokenStore.totalNumberTx, addPerTx: this.tokenStore.arrayLimit})\n    }\n  }\n\n  @action\n  async doApprove(){\n    this.keepRunning = true;\n    this.txs = [];\n    this.approval = '';\n    if(new BN(this.tokenStore.totalBalance === \"\" ? \"0\" : this.tokenStore.totalBalance).gt(new BN(this.tokenStore.allowance === \"\" ? \"0\" : this.tokenStore.allowance))){\n      this._approve();\n      const interval = setInterval(() => {\n        if(this.approval){\n          const index = this.txHashToIndex[this.approval];\n          console.log('checking autorun', index, this.approval, this.txHashToIndex, toJS(this.txs))\n          if(this.txs[index] && this.txs[index].status === 'mined'){\n            clearInterval(interval);\n            console.log('Approve complete')\n          }\n        } else {\n          console.log('checking autorun', this.txHashToIndex, toJS(this.txs))\n        }\n      }, 3000)\n      this.interval = interval;\n    }\n  }\n\n  async _approve(){\n    const index = this.txs.length;\n    const web3 = this.web3Store.web3;\n    const token = new web3.eth.Contract(ERC20ABI, this.tokenStore.tokenAddress);\n    try{\n      return token.methods.approve(await this.tokenStore.proxyMultiSenderAddress(), this.tokenStore.totalBalanceWithDecimals)\n      .send({from: this.web3Store.defaultAccount, gasPrice: this.gasPriceStore.standardInHex})\n      .once('transactionHash', (hash) => {\n        this.approval = hash\n        this.txHashToIndex[hash] = index;\n        this.txs[index] = {status: 'pending', name: `MultiSender Approval to spend ${this.tokenStore.totalBalance} ${this.tokenStore.tokenSymbol}`, hash}\n      })\n      .once('receipt', async (receipt) => {\n        await this.getTxStatus(receipt.transactionHash)\n      })\n      .on('error', (error) => {\n        swal(\"Error!\", error.message, 'error')\n        console.error(error)\n      })\n    } catch (e){\n      console.error(e)\n    }\n\n  }\n\n  async getApproveGas(){\n    const web3 = this.web3Store.web3;\n    const token = new web3.eth.Contract(ERC20ABI, this.tokenStore.tokenAddress);\n    let encodedData = await token.methods.approve(await this.tokenStore.proxyMultiSenderAddress(), this.tokenStore.totalBalanceWithDecimals).encodeABI({from: this.web3Store.defaultAccount})\n    return web3.eth.estimateGas({\n        from: this.web3Store.defaultAccount,\n        data: encodedData,\n        to: this.tokenStore.tokenAddress,\n    })\n  }\n\n  async _getTransferGas(to, value){\n    const web3 = this.web3Store.web3;\n    const { tokenAddress } = this.tokenStore\n    if(tokenAddress === \"0x000000000000000000000000000000000000bEEF\"){\n      return web3.eth.estimateGas({\n          from: this.web3Store.defaultAccount,\n          // data: null,\n          value: value,\n          to: to\n      })\n    } else {\n      const token = new web3.eth.Contract(ERC20ABI, this.tokenStore.tokenAddress);\n      const encodedData = await token.methods.transfer(to, value).encodeABI({from: this.web3Store.defaultAccount})\n      return await web3.eth.estimateGas({\n          from: this.web3Store.defaultAccount,\n          data: encodedData,\n          to: this.tokenStore.tokenAddress,\n      })\n    }\n  }\n\n  async getTransferGas() {\n    let totalGas = 0\n    let { addresses_to_send, balances_to_send } =  this.tokenStore\n    for (let i = 0; i < addresses_to_send.length; i++) {\n      const to = addresses_to_send[i]\n      const value = balances_to_send[i]\n      totalGas += await this._getTransferGas(to, value)\n    }\n    return totalGas\n  }\n\n  async getMultisendGas({slice, addPerTx}) {\n    let totalGas = 0\n\n    const token_address = this.tokenStore.tokenAddress\n    let {addresses_to_send, balances_to_send, currentFee, totalBalance} =  this.tokenStore;\n\n    const start = (slice - 1) * addPerTx;\n    const end = slice * addPerTx;\n    addresses_to_send = addresses_to_send.slice(start, end);\n    balances_to_send = balances_to_send.slice(start, end);\n    const totalInWei = balances_to_send.reduce((total, val) => {\n      return total.plus(new BN(val));\n    }, new BN(\"0\"));\n    const balances_to_send_sum = totalInWei.toString(10)\n    let ethValue;\n    if(token_address === \"0x000000000000000000000000000000000000bEEF\"){\n      const totalInEth = Web3Utils.fromWei(totalInWei.toString())\n      ethValue = new BN(currentFee).plus(totalInEth)\n    } else {\n      ethValue = new BN(currentFee)\n    }\n    console.log('slice', slice, addresses_to_send[0], balances_to_send[0], addPerTx)\n    const web3 = this.web3Store.web3;\n    const multisender = new web3.eth.Contract(MultiSenderAbi, await this.tokenStore.proxyMultiSenderAddress());\n\n    if(token_address === \"0x000000000000000000000000000000000000bEEF\"){\n      const encodedData = await multisender.methods.multiTransfer_OST(addresses_to_send, balances_to_send).encodeABI({from: this.web3Store.defaultAccount})\n      // console.log(\"web3.eth.estimateGas:\", web3.eth.estimateGas)\n      // console.log(\"web3.eth:\", web3.eth)\n      const gas = await web3.eth.estimateGas({\n          from: this.web3Store.defaultAccount,\n          data: encodedData,\n          value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n          to: await this.tokenStore.proxyMultiSenderAddress()\n      })\n      totalGas += gas\n    } else {\n      const encodedData = await multisender.methods.multiTransferToken_a4A(token_address, addresses_to_send, balances_to_send, balances_to_send_sum).encodeABI({from: this.web3Store.defaultAccount})\n      const gas = await web3.eth.estimateGas({\n          from: this.web3Store.defaultAccount,\n          data: encodedData,\n          value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n          to: await this.tokenStore.proxyMultiSenderAddress()\n      })\n      totalGas += gas\n    }\n    slice--;\n    if (slice > 0) {\n      totalGas += await this.getMultisendGas({slice, addPerTx});\n    }\n    return totalGas\n  }\n\n  async _multisend({slice, addPerTx}) {\n    if(!this.keepRunning){\n      return\n    }\n    const token_address = this.tokenStore.tokenAddress\n    let {addresses_to_send, balances_to_send, currentFee, totalBalance} =  this.tokenStore;\n\n    const start = (slice - 1) * addPerTx;\n    const end = slice * addPerTx;\n    addresses_to_send = addresses_to_send.slice(start, end);\n    balances_to_send = balances_to_send.slice(start, end);\n    const totalInWei = balances_to_send.reduce((total, val) => {\n      return total.plus(new BN(val));\n    }, new BN(\"0\"));\n    const balances_to_send_sum = totalInWei.toString(10)\n    let ethValue;\n    if(token_address === \"0x000000000000000000000000000000000000bEEF\"){\n      const totalInEth = Web3Utils.fromWei(totalInWei.toString())\n      ethValue = new BN(currentFee).plus(totalInEth)\n    } else {\n      ethValue = new BN(currentFee)\n    }\n    console.log('slice', slice, addresses_to_send[0], balances_to_send[0], addPerTx)\n    const web3 = this.web3Store.web3;\n    const multisender = new web3.eth.Contract(MultiSenderAbi, await this.tokenStore.proxyMultiSenderAddress());\n\n    try {\n      if(token_address === \"0x000000000000000000000000000000000000bEEF\"){\n        let encodedData = await multisender.methods.multiTransfer_OST(addresses_to_send, balances_to_send).encodeABI({from: this.web3Store.defaultAccount})\n        let gas = await web3.eth.estimateGas({\n            from: this.web3Store.defaultAccount,\n            data: encodedData,\n            value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n            to: await this.tokenStore.proxyMultiSenderAddress()\n        })\n        console.log('gas', gas)\n        let tx = multisender.methods.multiTransfer_OST(addresses_to_send, balances_to_send)\n        .send({\n          from: this.web3Store.defaultAccount,\n          gasPrice: this.gasPriceStore.standardInHex,\n          gas: Web3Utils.toHex(gas),\n          value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n        })\n\n        .once('transactionHash', (hash) => {\n          this.txHashToIndex[hash] = this.txs.length\n          this.txs.push({status: 'pending', name: `Sending Batch #${this.txs.length} ${this.tokenStore.tokenSymbol}\\n\n            From ${addresses_to_send[0].substring(0, 7)} to: ${addresses_to_send[addresses_to_send.length-1].substring(0, 7)}\n          `, hash})\n        })\n        .once('receipt', async (receipt) => {\n          await this.getTxStatus(receipt.transactionHash)\n        })\n        .on('error', (error) => {\n          swal(\"Error!\", error.message, 'error')\n          console.log(error)\n          // re-send\n          this._multisend({slice, addPerTx});\n        })\n      } else {\n        let encodedData = await multisender.methods.multiTransferToken_a4A(token_address, addresses_to_send, balances_to_send, balances_to_send_sum).encodeABI({from: this.web3Store.defaultAccount})\n        let gas = await web3.eth.estimateGas({\n            from: this.web3Store.defaultAccount,\n            data: encodedData,\n            value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n            to: await this.tokenStore.proxyMultiSenderAddress()\n        })\n        console.log('gas', gas)\n        let tx = multisender.methods.multiTransferToken_a4A(token_address, addresses_to_send, balances_to_send, balances_to_send_sum)\n        .send({\n          from: this.web3Store.defaultAccount,\n          gasPrice: this.gasPriceStore.standardInHex,\n          gas: Web3Utils.toHex(gas),\n          value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n        })\n\n        .once('transactionHash', (hash) => {\n          this.txHashToIndex[hash] = this.txs.length\n          this.txs.push({status: 'pending', name: `Sending Batch #${this.txs.length} ${this.tokenStore.tokenSymbol}\\n\n            From ${addresses_to_send[0].substring(0, 7)} to: ${addresses_to_send[addresses_to_send.length-1].substring(0, 7)}\n          `, hash})\n        })\n        .once('receipt', async (receipt) => {\n          await this.getTxStatus(receipt.transactionHash)\n        })\n        .on('error', (error) => {\n          swal(\"Error!\", error.message, 'error')\n          console.log(error)\n          // re-send\n          this._multisend({slice, addPerTx});\n        })\n      }\n      slice--;\n      if (slice > 0) {\n        this._multisend({slice, addPerTx});\n      }\n    } catch(e){\n      console.error(e)\n    }\n  }\n\n  async getTxReceipt(hash){\n    console.log('getTxReceipt')\n    try {\n      const web3 = this.web3Store.web3;\n      const res = await web3.eth.getTransaction(hash);\n      return res;\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  async getTxStatus(hash) {\n    console.log('GET TX STATUS', hash)\n    if(!this.keepRunning){\n      return\n    }\n    const index = this.txHashToIndex[hash]\n    const web3 = this.web3Store.web3;\n\n    const txInfo = await web3.eth.getTransaction(hash)\n    const receipt = await web3.eth.getTransactionReceipt(hash)\n    if (receipt.hasOwnProperty(\"status\")) {\n      if (receipt.status === \"0x1\") {\n        this.txs[index].status = `mined`\n      } else if (receipt.status === \"0x0\") {\n        // if (receipt.gasUsed > txInfo.gas) {\n          this.txs[index].status = `error`\n          this.txs[index].name = `Mined but with errors. Perhaps out of gas`\n        // } else {\n        //   this.txs[index].status = `error`\n        //   this.txs[index].name = `Mined but with errors. Perhaps out of gas`\n        //   // bad tx status, not confirmed!\n        // }\n      } else {\n        // unknown status. pre-Byzantium\n        if (receipt.gasUsed >= txInfo.gas) {\n          this.txs[index].status = `error`\n          this.txs[index].name = `Mined but with errors. Perhaps out of gas`\n        } else {\n          this.txs[index].status = `mined`\n        }\n      }\n    } else {\n      // unknown status. pre-Byzantium\n      if (receipt.gasUsed >= txInfo.gas) {\n        this.txs[index].status = `error`\n        this.txs[index].name = `Mined but with errors. Perhaps out of gas`\n      } else {\n        this.txs[index].status = `mined`\n      }\n    }\n  }\n\n  // gas used by the already processed Approve tx\n  async getApproveTxGas() {\n    if ('' === this.approval) {\n      return 0\n    }\n    const web3 = this.web3Store.web3;\n    const receipt = await web3.eth.getTransactionReceipt(this.approval)\n    return receipt.gasUsed\n  }\n\n}\n\nexport default TxStore;\n","import Web3Store from './web3Store'\nimport TokenStore from './tokenStore';\nimport GasPriceStore from './gasPriceStore';\nimport TxStore from './txStore';\n\nclass UiStore {\n  constructor() {\n    this.gasPriceStore = new GasPriceStore()\n    this.web3Store = new Web3Store(this)\n    this.tokenStore = new TokenStore(this)\n    this.txStore = new TxStore(this)\n  }\n}\n\nexport default new UiStore();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from \"mobx-react\";\nimport UiStore from \"./stores/UiStore\";\n\nconst Root = (\n  <Provider UiStore={UiStore}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\nReactDOM.render(Root, document.getElementById('root'));\n"],"sourceRoot":""}